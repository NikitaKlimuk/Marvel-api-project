{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/SingleComicPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","process","setProcess","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","Skeleton","className","setContent","Component","Spinner","AppBanner","avengers","avengersLogo","View","content","to","SingleComicPage","comicId","useParams","comic","setComic","useEffect","updateComic","then","onComicLoaded"],"mappings":"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","file":"static/js/5.5e249dce.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='error gif'/>\n    )\n}\n\nexport default ErrorMessage;","import {useHttp} from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n    const {request, clearError, process, setProcess} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=c83e1b4e4ee69fd09227579259920e97';\n    const _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getAllComics = async (offset = 0) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n            title: comics.title,\n            description: comics.description || 'There is no description',\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            language: comics.textObjects.language || 'en-us',\n            price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\n        }\n    }\n\n    return {clearError, process, setProcess, getAllCharacters, getCharacter, getAllComics, getComic}\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n\n    const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n        \n        setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    const clearError = useCallback(() => {\n        setProcess('loading');\n    }, []);\n\n    return {request, clearError, process, setProcess}\n}","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\nimport ErrorMessage from '../components/errorMessage/ErrorMessage'\nimport Skeleton from '../components/skeleton/Skeleton'\n\nconst setContent = (process, Component, data) => {\n    switch (process) {\n        case 'waiting' :\n            return <Skeleton/>;\n        case 'loading' : \n            return <Spinner/>;\n        case 'confirmed' :\n            return <Component data={data}/>;\n        case 'error' :\n            return <ErrorMessage/>;\n        default :\n            return new Error('Unexpected process state');\n    }\n}\n\nexport default setContent;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport useMarvelService from '../../services/MarvelService';\nimport AppBanner from \"../appBanner/AppBanner\";\nimport setContent from '../../utils/setContent';\nimport './singleComicPage.scss';\n\nconst SingleComicPage = () => {\n    const {comicId} = useParams();\n    const [comic, setComic] = useState(null);\n    const {getComic, clearError, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        updateComic()\n    }, [comicId])\n\n    const updateComic = () => {\n        clearError();\n        getComic(comicId)\n            .then(onComicLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n\n    const onComicLoaded = (comic) => {\n        setComic(comic);\n    }\n\n    return (\n        <>\n            <AppBanner/>\n            {setContent(process, View, comic)}\n        </>\n    )\n}\n\nconst View = ({data}) => {\n    const {title, description, pageCount, thumbnail, language, price} = data;\n\n    return (\n        <div className=\"single-comic\">\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content={`${title} comics book`}\n                />\n                <title>{title}</title>\n            </Helmet>\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pageCount}</p>\n                <p className=\"single-comic__descr\">Language: {language}</p>\n                <div className=\"single-comic__price\">{price}</div>\n            </div>\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n        </div>\n    )\n}\n\nexport default SingleComicPage;"],"sourceRoot":""}