{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","process","setProcess","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","AppBanner","className","avengers","avengersLogo","setContent","Component","newItemLoading","Spinner","ComicsList","comicsList","setComicsList","setnewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","item","i","to","renderItems","disabled","onClick","ComicsPage","Helmet","content"],"mappings":"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","file":"static/js/6.4a3fe3d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='error gif'/>\n    )\n}\n\nexport default ErrorMessage;","import {useHttp} from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n    const {request, clearError, process, setProcess} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=c83e1b4e4ee69fd09227579259920e97';\n    const _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getAllComics = async (offset = 0) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n            title: comics.title,\n            description: comics.description || 'There is no description',\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            language: comics.textObjects.language || 'en-us',\n            price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\n        }\n    }\n\n    return {clearError, process, setProcess, getAllCharacters, getCharacter, getAllComics, getComic}\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n\n    const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n        \n        setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    const clearError = useCallback(() => {\n        setProcess('loading');\n    }, []);\n\n    return {request, clearError, process, setProcess}\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting' :\n            return <Spinner/>;\n        case 'loading' : \n            return newItemLoading ? <Component/> : <Spinner/>;\n        case 'confirmed' :\n            return <Component/>;\n        case 'error' :\n            return <ErrorMessage/>;\n        default :\n            return new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {getAllComics, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setnewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems (arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItems(comicsList), newItemLoading)}\n            <button \n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\n\nimport AppBanner from \"../appBanner/AppBanner\";\nimport ComicsList from \"../comicsList/ComicsList\";\n\nconst ComicsPage = () => {\n\n    return(\n        <>\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Page with list of our comics\"\n                />\n                <title>Comics page</title>\n            </Helmet>\n            <AppBanner/>\n            <ComicsList/>\n        </>\n    );\n}\n\nexport default ComicsPage;"],"sourceRoot":""}